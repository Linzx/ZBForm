From c72ed9e1574eaae4fdbc4ad1ea999469323fe5d2 Mon Sep 17 00:00:00 2001
From: zhangxuelin <zhangxuelin2018@163.com>
Date: Sat, 22 Dec 2018 22:59:03 +0800
Subject: [PATCH] add Record list fragment

Signed-off-by: zhangxuelin <zhangxuelin2018@163.com>
---
 .../pullrefresh/loadmore/ListViewHandler.java |   2 -
 .../zbform/penform/activity/ZBformMain.java   |  38 ++-
 .../penform/fragment/RecordListFragment.java  | 217 ++++++++++++++++++
 .../com/zbform/penform/json/RecordItem.java   |  16 ++
 .../zbform/penform/json/RecordListInfo.java   |  13 ++
 .../zbform/penform/task/GetFormListTask.java  | 117 ----------
 .../com/zbform/penform/task/LoginTask.java    | 192 ++++++++--------
 .../zbform/penform/task/RecordListTask.java   | 127 ++++++++++
 .../main/res/layout/fragment_recordlist.xml   |  33 +++
 .../res/layout/listitem_recordlist_layout.xml |  45 ++++
 10 files changed, 562 insertions(+), 238 deletions(-)
 create mode 100755 app/src/main/java/com/zbform/penform/fragment/RecordListFragment.java
 delete mode 100644 app/src/main/java/com/zbform/penform/task/GetFormListTask.java
 create mode 100644 app/src/main/java/com/zbform/penform/task/RecordListTask.java
 create mode 100755 app/src/main/res/layout/fragment_recordlist.xml
 create mode 100644 app/src/main/res/layout/listitem_recordlist_layout.xml

diff --git a/app/src/main/java/com/pullrefresh/loadmore/ListViewHandler.java b/app/src/main/java/com/pullrefresh/loadmore/ListViewHandler.java
index 06bec2a..d23dbf0 100755
--- a/app/src/main/java/com/pullrefresh/loadmore/ListViewHandler.java
+++ b/app/src/main/java/com/pullrefresh/loadmore/ListViewHandler.java
@@ -119,6 +119,4 @@ public class ListViewHandler implements LoadMoreHandler {
 
         }
     }
-
-    ;
 }
diff --git a/app/src/main/java/com/zbform/penform/activity/ZBformMain.java b/app/src/main/java/com/zbform/penform/activity/ZBformMain.java
index 05d213e..5315c83 100755
--- a/app/src/main/java/com/zbform/penform/activity/ZBformMain.java
+++ b/app/src/main/java/com/zbform/penform/activity/ZBformMain.java
@@ -2,20 +2,14 @@ package com.zbform.penform.activity;
 
 import android.app.Activity;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
-import android.graphics.Color;
-import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.AlertDialog;
 import android.support.v7.widget.Toolbar;
-import android.util.Log;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -31,14 +25,11 @@ import com.bumptech.glide.Glide;
 import com.zbform.penform.R;
 import com.zbform.penform.account.GlideCircleTransform;
 import com.zbform.penform.adapter.MenuItemAdapter;
-//import com.zbform.penform.banner.BannerHttpUtils;
 import com.zbform.penform.fragment.BaseFragment;
 import com.zbform.penform.fragment.FormListFragment;
-import com.zbform.penform.net.ApiAddress;
+import com.zbform.penform.fragment.RecordListFragment;
 import com.zbform.penform.settings.Activity_Settings;
-import com.zbform.penform.task.GetFormListTask;
-import com.zbform.penform.update.UpdateAppManager;
-import com.zbform.penform.update.UpdateUtils;
+import com.zbform.penform.task.RecordListTask;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -105,11 +96,6 @@ public class ZBformMain extends BaseActivity{
 
                 switch (position) {
                     case 1:
-                        //个人信息
-//                        selectFragment(position);
-                        drawerLayout.closeDrawers();
-                        break;
-                    case 2:
                         // 表单列表
                         if (!(mCurrentFragmet instanceof FormListFragment)) {
                             mCurrentFragmet = new FormListFragment();
@@ -117,16 +103,22 @@ public class ZBformMain extends BaseActivity{
                         }
                         drawerLayout.closeDrawers();
                         break;
-                    case 3:
+                    case 2:
                         // 表单记录列表
+                        if (!(mCurrentFragmet instanceof RecordListFragment)) {
+                            mCurrentFragmet = new RecordListFragment();
+                            selectFragment(mCurrentFragmet);
+                        }
                         drawerLayout.closeDrawers();
                         break;
-                    case 4:
+                    case 3:
                         // 设置
-                        Intent intent = new Intent(ZBformMain.this,Activity_Settings.class);
-                        startActivity(intent);
                         drawerLayout.closeDrawers();
                         break;
+                    case 4:
+                        // 更新
+                        finish();
+                        drawerLayout.closeDrawers();
                     case 5:
                         // 退出
                         finish();
@@ -140,9 +132,9 @@ public class ZBformMain extends BaseActivity{
     /**
      * 获取表单列表
      */
-    public void getFormList(String userId, String userKeyStr){
-        GetFormListTask getFormListTask = new GetFormListTask();
-        getFormListTask.getFormList(this,userId,userKeyStr);
+    public void getRecordsList(Context context, String formId){
+        RecordListTask getFormListTask = new RecordListTask(this, formId);
+        getFormListTask.getRecordList();
     }
 
     @Override
diff --git a/app/src/main/java/com/zbform/penform/fragment/RecordListFragment.java b/app/src/main/java/com/zbform/penform/fragment/RecordListFragment.java
new file mode 100755
index 0000000..51cd2fb
--- /dev/null
+++ b/app/src/main/java/com/zbform/penform/fragment/RecordListFragment.java
@@ -0,0 +1,217 @@
+package com.zbform.penform.fragment;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.os.Handler;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.BaseAdapter;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.pullrefresh.PtrClassicFrameLayout;
+import com.pullrefresh.PtrDefaultHandler;
+import com.pullrefresh.PtrFrameLayout;
+import com.pullrefresh.loadmore.OnLoadMoreListener;
+import com.zbform.penform.R;
+import com.zbform.penform.json.RecordItem;
+import com.zbform.penform.json.RecordListInfo;
+import com.zbform.penform.task.RecordListTask;
+
+import java.text.ParsePosition;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+public class RecordListFragment extends BaseFragment implements RecordListTask.OnTaskListener {
+
+    public static final String TAG = RecordListFragment.class.getSimpleName();
+    private PtrClassicFrameLayout ptrClassicFrameLayout;
+    private ListView mListView;
+    private ListViewAdapter mAdapter;
+    private List<RecordItem> mData = new ArrayList<>();
+    private Handler handler = new Handler();
+    private RecordListTask mTask;
+
+    private Context mContext;
+
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        mContext = context;
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_recordlist, container, false);
+        initView(view);
+        initData();
+        return view;
+    }
+
+    private void initView(View view) {
+        ptrClassicFrameLayout = view.findViewById(R.id.record_list_view_frame);
+        mListView = view.findViewById(R.id.record_list_view);
+    }
+
+    private void initData() {
+        mTask = new RecordListTask(mContext, "");
+        mTask.setTaskListener(this);
+
+        mAdapter = new ListViewAdapter(mContext);
+        mListView.setAdapter(mAdapter);
+        ptrClassicFrameLayout.postDelayed(new Runnable() {
+
+            @Override
+            public void run() {
+                ptrClassicFrameLayout.autoRefresh(true);
+            }
+        }, 150);
+
+        ptrClassicFrameLayout.setPtrHandler(new PtrDefaultHandler() {
+
+            @Override
+            public void onRefreshBegin(PtrFrameLayout frame) {
+                handler.postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        Log.i(TAG,"get record list");
+                        mTask.getRecordList();
+//                        page = 0;
+//                        mData.clear();
+//                        for (int i = 0; i < 40; i++) {
+//                            mData.add(new String("GridView item  -" + i));
+//                        }
+//                        mAdapter.notifyDataSetChanged();
+//                        ptrClassicFrameLayout.refreshComplete();
+//                        ptrClassicFrameLayout.setLoadMoreEnable(true);
+                    }
+                }, 1500);
+            }
+        });
+
+        ptrClassicFrameLayout.setOnLoadMoreListener(new OnLoadMoreListener() {
+
+            @Override
+            public void loadMore() {
+                handler.postDelayed(new Runnable() {
+
+                    @Override
+                    public void run() {
+//                        for (int i = 0; i < 4; i++) {
+//                            mData.add(new String("GridView item -- add" + page));
+//                        }
+//                        mAdapter.notifyDataSetChanged();
+//                        ptrClassicFrameLayout.loadMoreComplete(true);
+//                        page++;
+                        Toast.makeText(mContext, "load more complete", Toast.LENGTH_SHORT).show();
+                    }
+                }, 1000);
+            }
+        });
+    }
+
+    @Override
+    public void onTaskStart() {
+
+    }
+
+    @Override
+    public void onTaskSuccess(List<RecordListInfo.Results> results) {
+        if(results.size() > 0) {
+            mData = Arrays.asList(results.get(0).getItems());
+            mAdapter.setData(mData);
+            mAdapter.notifyDataSetChanged();
+        }
+        ptrClassicFrameLayout.refreshComplete();
+    }
+
+    @Override
+    public void onTaskFail() {
+        ptrClassicFrameLayout.refreshComplete();
+
+    }
+
+
+    public class ListViewAdapter extends BaseAdapter {
+        private List<RecordItem> datas ;
+        private LayoutInflater inflater;
+
+        public ListViewAdapter(Context context) {
+            super();
+            inflater = LayoutInflater.from(context);
+            datas = new ArrayList<>();
+        }
+
+        public ListViewAdapter(Context context, List<RecordItem> data) {
+            super();
+            inflater = LayoutInflater.from(context);
+            datas = data;
+        }
+
+        @Override
+        public int getCount() {
+            return datas.size();
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            ViewHolder holder;
+            if (convertView == null) {
+                convertView = inflater.inflate(R.layout.listitem_recordlist_layout, parent, false);
+                holder = new ViewHolder(convertView);
+                convertView.setTag(holder);
+            } else {
+                holder = (ViewHolder) convertView.getTag();
+            }
+
+            holder.recordCode.setText(datas.get(position).getHwcode());
+            holder.modifyDate.setText(convertDateFormat(datas.get(position).getHwmodifydate()));
+            holder.owner.setText(datas.get(position).getHwgroup());
+            return convertView;
+        }
+
+        public List<RecordItem> getData() {
+            return datas;
+        }
+
+        public void setData(List<RecordItem> data) {
+            datas = data;
+        }
+
+    }
+
+    public String convertDateFormat(String origin) {
+        SimpleDateFormat originDateFormat = new SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS");
+        SimpleDateFormat dstDateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
+        return dstDateFormat.format(originDateFormat.parse(origin,new ParsePosition(0)));
+    }
+    public class ViewHolder{
+        public TextView recordCode;
+        public TextView modifyDate;
+        public TextView owner;
+
+        public ViewHolder(View view) {
+            recordCode = view.findViewById(R.id.record_code);
+            modifyDate = view.findViewById(R.id.modify_date);
+            owner = view.findViewById(R.id.owner);
+        }
+
+    }
+}
diff --git a/app/src/main/java/com/zbform/penform/json/RecordItem.java b/app/src/main/java/com/zbform/penform/json/RecordItem.java
index 9cb0843..5affc13 100644
--- a/app/src/main/java/com/zbform/penform/json/RecordItem.java
+++ b/app/src/main/java/com/zbform/penform/json/RecordItem.java
@@ -92,4 +92,20 @@ public class RecordItem {
     public void setHwmodifydate(String hwmodifydate) {
         this.hwmodifydate = hwmodifydate;
     }
+
+    @Override
+    public String toString() {
+        return "RecordItem{" +
+                "hwcode='" + hwcode + '\'' +
+                ", hwuuid='" + hwuuid + '\'' +
+                ", hwgroup='" + hwgroup + '\'' +
+                ", hwname='" + hwname + '\'' +
+                ", hwsize=" + hwsize +
+                ", hwpage=" + hwpage +
+                ", hwheigh=" + hwheigh +
+                ", hwwidth=" + hwwidth +
+                ", hwcreatedate='" + hwcreatedate + '\'' +
+                ", hwmodifydate='" + hwmodifydate + '\'' +
+                '}';
+    }
 }
diff --git a/app/src/main/java/com/zbform/penform/json/RecordListInfo.java b/app/src/main/java/com/zbform/penform/json/RecordListInfo.java
index 8f89dcd..92c8344 100644
--- a/app/src/main/java/com/zbform/penform/json/RecordListInfo.java
+++ b/app/src/main/java/com/zbform/penform/json/RecordListInfo.java
@@ -1,5 +1,7 @@
 package com.zbform.penform.json;
 
+import java.util.Arrays;
+
 public class RecordListInfo extends BaseInfo {
     public Results[] results;
 
@@ -49,5 +51,16 @@ public class RecordListInfo extends BaseInfo {
         public void setItems(RecordItem[] items) {
             this.items = items;
         }
+
+        @Override
+        public String toString() {
+            return "Results{" +
+                    "code='" + code + '\'' +
+                    ", uuid='" + uuid + '\'' +
+                    ", group='" + group + '\'' +
+                    ", name='" + name + '\'' +
+                    ", items=" + Arrays.toString(items) +
+                    '}';
+        }
     }
 }
diff --git a/app/src/main/java/com/zbform/penform/task/GetFormListTask.java b/app/src/main/java/com/zbform/penform/task/GetFormListTask.java
deleted file mode 100644
index c769960..0000000
--- a/app/src/main/java/com/zbform/penform/task/GetFormListTask.java
+++ /dev/null
@@ -1,117 +0,0 @@
-package com.zbform.penform.task;
-
-import android.content.Context;
-import android.util.Log;
-
-import com.google.gson.Gson;
-import com.google.gson.reflect.TypeToken;
-import com.lidroid.xutils.exception.HttpException;
-import com.lidroid.xutils.http.ResponseInfo;
-import com.lidroid.xutils.http.client.HttpRequest;
-import com.zbform.penform.json.FormListInfo;
-import com.zbform.penform.net.ApiAddress;
-import com.zbform.penform.net.ErrorCode;
-import com.zbform.penform.net.IZBformNetBeanCallBack;
-import com.zbform.penform.net.ZBformNetBean;
-
-public class GetFormListTask implements IZBformNetBeanCallBack {
-    private static final String TAG = "GetFormListTask";
-
-    private String mUserId;
-    private String mUserKeyStr;
-
-    private Context mContext;
-    private OnGetFormListListener mOnGetFormListListener;
-
-    public interface OnGetFormListListener {
-        public void onStart();
-
-        public void onSuccess();
-
-        public void onFail();
-    }
-
-    public void getFormList(Context context, String formListId, String userKeyStr) {
-        mContext = context;
-        mUserId = formListId;
-        mUserKeyStr = "aaaaaa";
-        String getFormListUrl = ApiAddress.getFormListUri(formListId, userKeyStr);
-        ZBformNetBean getFormListTask = new ZBformNetBean(context, getFormListUrl,
-                HttpRequest.HttpMethod.GET);
-        getFormListTask.setNetTaskCallBack(this);
-        getFormListTask.execute();
-    }
-
-    public void setOnLoginTaskListener(OnGetFormListListener listener) {
-        mOnGetFormListListener = listener;
-    }
-
-    @Override
-    public void onStart() {
-        if (mOnGetFormListListener != null) {
-            mOnGetFormListListener.onStart();
-        }
-    }
-
-    @Override
-    public void onCancelled() {
-        // TODO Auto-generated method stub
-
-    }
-
-    @Override
-    public void onLoading(long total, long current, boolean isUploading) {
-        // TODO Auto-generated method stub
-
-    }
-
-    @Override
-    public void onSuccess(ResponseInfo<String> responseInfo) {
-        try {
-            String resultGson = responseInfo.result;
-            Log.i(TAG, "resultGson!!=" + resultGson);
-            Gson gson = new Gson();
-            FormListInfo formList = gson.fromJson(resultGson, new TypeToken<FormListInfo>(){}.getType());
-
-            if (formList != null && formList.header != null
-                    && formList.results != null && formList.results.length > 0) {
-
-                Log.i(TAG, "errorcode =" + formList.header.getErrorCode());
-                Log.i(TAG, "results conunt: "+ formList.header.getCount());
-                Log.i(TAG, "user code =" + formList.results[0].getCode());
-                if (formList.header.getErrorCode().equals(ErrorCode.RESULT_OK)) {
-                    for(FormListInfo.Results r: formList.results) {
-                        Log.i(TAG, r.toString());
-                    }
-                    if (mOnGetFormListListener != null) {
-                        mOnGetFormListListener.onSuccess();
-                    }
-
-                } else {
-                    if (mOnGetFormListListener != null) {
-                        mOnGetFormListListener.onFail();
-                    }
-                }
-            } else {
-                if (mOnGetFormListListener != null) {
-                    mOnGetFormListListener.onFail();
-                }
-            }
-        } catch (Exception e) {
-            Log.i(TAG, "e=" + e.getMessage());
-//            Toast.makeText(mContext,
-//                    mContext.getString(R.string.login_no_formList),
-//                    Toast.LENGTH_SHORT).show();
-            if (mOnGetFormListListener != null) {
-                mOnGetFormListListener.onFail();
-            }
-        }
-    }
-
-    @Override
-    public void onFailure(HttpException error, String msg) {
-        if (mOnGetFormListListener != null) {
-            mOnGetFormListListener.onFail();
-        }
-    }
-}
diff --git a/app/src/main/java/com/zbform/penform/task/LoginTask.java b/app/src/main/java/com/zbform/penform/task/LoginTask.java
index 263983f..5552d2c 100644
--- a/app/src/main/java/com/zbform/penform/task/LoginTask.java
+++ b/app/src/main/java/com/zbform/penform/task/LoginTask.java
@@ -18,100 +18,100 @@ import com.zbform.penform.net.IZBformNetBeanCallBack;
 import com.zbform.penform.net.ZBformNetBean;
 
 public class LoginTask implements IZBformNetBeanCallBack {
-	private static final String TAG = "LoginTask";
-	private String mPwd;
-	private String mUserId;
-	private Context mContext;
-	private OnLoginTaskListener mOnLoginTaskListener;
-
-	public interface OnLoginTaskListener {
-		public void onStartLogin();
-
-		public void onLoginSuccess();
-
-		public void onLoginFail();
-	}
-
-	public void Login(Context context, String name, String pwd) {
-		mContext = context;
-		mPwd = pwd;
-		mUserId = name;
-		String loginUrl = ApiAddress.getLoginUri(name, pwd);
-		ZBformNetBean loginTask = new ZBformNetBean(context, loginUrl,
-				HttpRequest.HttpMethod.GET);
-		loginTask.setNetTaskCallBack(this);
-		loginTask.execute();
-	}
-
-	public void setOnLoginTaskListener(OnLoginTaskListener listener) {
-		mOnLoginTaskListener = listener;
-	}
-
-	@Override
-	public void onStart() {
-		if (mOnLoginTaskListener != null) {
-			mOnLoginTaskListener.onStartLogin();
-		}
-	}
-
-	@Override
-	public void onCancelled() {
-		// TODO Auto-generated method stub
-
-	}
-
-	@Override
-	public void onLoading(long total, long current, boolean isUploading) {
-		// TODO Auto-generated method stub
-
-	}
-
-	@Override
-	public void onSuccess(ResponseInfo<String> responseInfo) {
-		try {
-			String resultGson = responseInfo.result;
-			Log.i("whd", "resultGson!!=" + resultGson);
-			Gson gson = new Gson();
-			UserInfo user = gson.fromJson(resultGson, new TypeToken<UserInfo>() {
-			}.getType());
-
-			if (user != null && user.header != null
-					&& user.results != null && user.results.length > 0) {
-
-				Log.i("whd", "errorcode!!=" + user.header.getErrorCode());
-				Log.i("whd", "usercode!!=" + user.results[0].getUserCode());
-				if (user.header.getErrorCode().equals(ErrorCode.RESULT_OK)
-						&& user.results[0].getUserCode().equals(mUserId)) {
-					ZBformApplication.setmLoginUserId(user.results[0].getUserCode());
-					ZBformApplication.setmLoginUserKey(user.results[0].getKeystr());
-					if (mOnLoginTaskListener != null) {
-						mOnLoginTaskListener.onLoginSuccess();
-					}
-
-				} else {
-					if (mOnLoginTaskListener != null) {
-						mOnLoginTaskListener.onLoginFail();
-					}
-				}
-			} else {
-				Log.i("whd", "user null");
-				if (mOnLoginTaskListener != null) {
-					mOnLoginTaskListener.onLoginFail();
-				}
-			}
-		} catch (Exception e) {
-			android.util.Log.i(TAG, "e=" + e.getMessage());
-
-			if (mOnLoginTaskListener != null) {
-				mOnLoginTaskListener.onLoginFail();
-			}
-		}
-	}
-
-	@Override
-	public void onFailure(HttpException error, String msg) {
-		if (mOnLoginTaskListener != null) {
-			mOnLoginTaskListener.onLoginFail();
-		}
-	}
+    private static final String TAG = "LoginTask";
+    private String mPwd;
+    private String mUserId;
+    private Context mContext;
+    private OnLoginTaskListener mOnLoginTaskListener;
+
+    public interface OnLoginTaskListener {
+        public void onStartLogin();
+
+        public void onLoginSuccess();
+
+        public void onLoginFail();
+    }
+
+    public void Login(Context context, String name, String pwd) {
+        mContext = context;
+        mPwd = pwd;
+        mUserId = name;
+        String loginUrl = ApiAddress.getLoginUri(name, pwd);
+        ZBformNetBean loginTask = new ZBformNetBean(context, loginUrl,
+                HttpRequest.HttpMethod.GET);
+        loginTask.setNetTaskCallBack(this);
+        loginTask.execute();
+    }
+
+    public void setOnLoginTaskListener(OnLoginTaskListener listener) {
+        mOnLoginTaskListener = listener;
+    }
+
+    @Override
+    public void onStart() {
+        if (mOnLoginTaskListener != null) {
+            mOnLoginTaskListener.onStartLogin();
+        }
+    }
+
+    @Override
+    public void onCancelled() {
+        // TODO Auto-generated method stub
+
+    }
+
+    @Override
+    public void onLoading(long total, long current, boolean isUploading) {
+        // TODO Auto-generated method stub
+
+    }
+
+    @Override
+    public void onSuccess(ResponseInfo<String> responseInfo) {
+        try {
+            String resultGson = responseInfo.result;
+            Log.i("whd", "resultGson!!=" + resultGson);
+            Gson gson = new Gson();
+            UserInfo user = gson.fromJson(resultGson, new TypeToken<UserInfo>() {
+            }.getType());
+
+            if (user != null && user.header != null
+                    && user.results != null && user.results.length > 0) {
+
+                Log.i("whd", "errorcode!!=" + user.header.getErrorCode());
+                Log.i("whd", "usercode!!=" + user.results[0].getUserCode());
+                if (user.header.getErrorCode().equals(ErrorCode.RESULT_OK)
+                        && user.results[0].getUserCode().equals(mUserId)) {
+                    ZBformApplication.setmLoginUserId(user.results[0].getUserCode());
+                    ZBformApplication.setmLoginUserKey(user.results[0].getKeystr());
+                    if (mOnLoginTaskListener != null) {
+                        mOnLoginTaskListener.onLoginSuccess();
+                    }
+
+                } else {
+                    if (mOnLoginTaskListener != null) {
+                        mOnLoginTaskListener.onLoginFail();
+                    }
+                }
+            } else {
+                Log.i("whd", "user null");
+                if (mOnLoginTaskListener != null) {
+                    mOnLoginTaskListener.onLoginFail();
+                }
+            }
+        } catch (Exception e) {
+            android.util.Log.i(TAG, "e=" + e.getMessage());
+
+            if (mOnLoginTaskListener != null) {
+                mOnLoginTaskListener.onLoginFail();
+            }
+        }
+    }
+
+    @Override
+    public void onFailure(HttpException error, String msg) {
+        if (mOnLoginTaskListener != null) {
+            mOnLoginTaskListener.onLoginFail();
+        }
+    }
 }
diff --git a/app/src/main/java/com/zbform/penform/task/RecordListTask.java b/app/src/main/java/com/zbform/penform/task/RecordListTask.java
new file mode 100644
index 0000000..5b7a8be
--- /dev/null
+++ b/app/src/main/java/com/zbform/penform/task/RecordListTask.java
@@ -0,0 +1,127 @@
+package com.zbform.penform.task;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
+import com.lidroid.xutils.exception.HttpException;
+import com.lidroid.xutils.http.ResponseInfo;
+import com.lidroid.xutils.http.client.HttpRequest;
+import com.zbform.penform.ZBformApplication;
+import com.zbform.penform.json.RecordListInfo;
+import com.zbform.penform.net.ApiAddress;
+import com.zbform.penform.net.ErrorCode;
+import com.zbform.penform.net.IZBformNetBeanCallBack;
+import com.zbform.penform.net.ZBformNetBean;
+
+import java.util.Arrays;
+import java.util.List;
+
+public class RecordListTask implements IZBformNetBeanCallBack {
+    private static final String TAG = RecordListTask.class.getSimpleName();
+
+    private String mUserId;
+    private String mUserKeyStr;
+    private String mFormId;
+
+    private Context mContext;
+    private OnTaskListener mOnTaskListener;
+
+
+    public interface OnTaskListener {
+        public void onTaskStart();
+
+        public void onTaskSuccess(List<RecordListInfo.Results> results);
+
+        public void onTaskFail();
+    }
+
+    public RecordListTask(Context context, String formId){
+        mUserId = ZBformApplication.getmLoginUserId();
+        mUserKeyStr = ZBformApplication.getmLoginUserKey();
+        mContext = context;
+        mFormId = "8341b2a9-7b72-4059-9822-ae77e6580c46";
+    }
+
+    public void getRecordList() {
+        Log.i(TAG, "[getRecordList] begin");
+        String getFormListUrl = ApiAddress.getRecordListUri(mUserId, mUserKeyStr, mFormId);
+        ZBformNetBean getFormListTask = new ZBformNetBean(mContext, getFormListUrl,
+                HttpRequest.HttpMethod.GET);
+        getFormListTask.setNetTaskCallBack(this);
+        getFormListTask.execute();
+        Log.i(TAG, "[getRecordList] end");
+
+    }
+
+
+    public void setTaskListener(OnTaskListener listener) {
+        mOnTaskListener = listener;
+    }
+
+    @Override
+    public void onStart() {
+        if (mOnTaskListener != null) {
+            mOnTaskListener.onTaskStart();
+        }
+    }
+
+    @Override
+    public void onCancelled() {
+        // TODO Auto-generated method stub
+
+    }
+
+    @Override
+    public void onLoading(long total, long current, boolean isUploading) {
+        // TODO Auto-generated method stub
+
+    }
+
+    @Override
+    public void onSuccess(ResponseInfo<String> responseInfo) {
+        try {
+            String resultGson = responseInfo.result;
+            Log.i(TAG, "resultGson!!=" + resultGson);
+            Gson gson = new Gson();
+            RecordListInfo recordList = gson.fromJson(resultGson, new TypeToken<RecordListInfo>(){}.getType());
+
+            if (recordList != null && recordList.header != null
+                    && recordList.results != null && recordList.results.length > 0) {
+
+                Log.i(TAG, "errorcode =" + recordList.header.getErrorCode());
+                Log.i(TAG, "results conunt: "+ recordList.header.getCount());
+                if (recordList.header.getErrorCode().equals(ErrorCode.RESULT_OK)) {
+                    for(RecordListInfo.Results r: recordList.results) {
+                        Log.i(TAG, r.toString());
+                    }
+                    if (mOnTaskListener != null) {
+                        mOnTaskListener.onTaskSuccess(Arrays.asList(recordList.results));
+                    }
+
+                } else {
+                    if (mOnTaskListener != null) {
+                        mOnTaskListener.onTaskFail();
+                    }
+                }
+            } else {
+                if (mOnTaskListener != null) {
+                    mOnTaskListener.onTaskFail();
+                }
+            }
+        } catch (Exception e) {
+            Log.i(TAG, "e=" + e.getMessage());
+            if (mOnTaskListener != null) {
+                mOnTaskListener.onTaskFail();
+            }
+        }
+    }
+
+    @Override
+    public void onFailure(HttpException error, String msg) {
+        if (mOnTaskListener != null) {
+            mOnTaskListener.onTaskFail();
+        }
+    }
+}
diff --git a/app/src/main/res/layout/fragment_recordlist.xml b/app/src/main/res/layout/fragment_recordlist.xml
new file mode 100755
index 0000000..72e4bc0
--- /dev/null
+++ b/app/src/main/res/layout/fragment_recordlist.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <com.pullrefresh.PtrClassicFrameLayout
+        xmlns:cube_ptr="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/record_list_view_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="#f0f0f0"
+        cube_ptr:ptr_duration_to_close="200"
+        cube_ptr:ptr_duration_to_close_header="700"
+        cube_ptr:ptr_keep_header_when_refresh="true"
+        cube_ptr:ptr_pull_to_fresh="false"
+        cube_ptr:ptr_ratio_of_header_height_to_refresh="1.2"
+        cube_ptr:ptr_resistance="1.8" >
+
+
+        <ListView
+            android:id="@+id/record_list_view"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:background="@android:color/white"
+            android:divider="#b0b0b0"
+            android:dividerHeight="0.1dp"
+            android:fadingEdge="none"
+            android:scrollbarStyle="outsideOverlay"/>
+    </com.pullrefresh.PtrClassicFrameLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/listitem_recordlist_layout.xml b/app/src/main/res/layout/listitem_recordlist_layout.xml
new file mode 100644
index 0000000..a28a81d
--- /dev/null
+++ b/app/src/main/res/layout/listitem_recordlist_layout.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/list_item"
+    android:layout_width="match_parent"
+    android:layout_height="64dp"
+    android:gravity="left"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/record_code"
+        android:layout_width="match_parent"
+        android:layout_height="32dp"
+        android:paddingLeft="16dp"
+        android:paddingBottom="2dp"
+        android:paddingTop="2dp"
+        android:gravity="left" />
+
+    <LinearLayout
+        android:id="@+id/second_item"
+        android:layout_width="match_parent"
+        android:layout_height="32dp"
+        android:orientation="horizontal" >
+
+        <TextView
+            android:id="@+id/owner"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="left"
+            android:paddingLeft="16dp"
+            android:paddingTop="2dp"
+            android:paddingRight="16dp"
+            android:paddingBottom="2dp" />
+
+        <TextView
+            android:id="@+id/modify_date"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_gravity="right"
+            android:gravity="right"
+            android:paddingLeft="16dp"
+            android:paddingTop="2dp"
+            android:paddingRight="16dp"
+            android:paddingBottom="2dp" />
+    </LinearLayout>
+</LinearLayout>
-- 
2.18.0

